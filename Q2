import pandas as pd
import numpy as np

def valid_cube(cubes):
    colour = cubes.split(" ")[1]
    numcubes = int(cubes.split(" ")[0])
    if colour not in cubemax.keys():
        return False
    elif cubemax[colour] < numcubes:
        return False
    return True

def valid_round(cuberound):
    isvalid = []
    for cubes in cuberound:
        isvalid.append(valid_cube(cubes))
    return all(isvalid)

with open('input.txt') as f:
    lines = f.read()
    
lines = lines.split("\n")
lines = lines[:-1]

games = [l.split(":")[1].strip() for l in lines]
rounds = [[r.strip() for r in g.split(";")] for g in games]
cubenums = [[[c.strip() for c in r.split(",")] for r in g] for g in rounds]

cubemax = {"red": 12, "green": 13, "blue": 14}
    
validrounds = [[valid_round(cr) for cr in g] for g in cubenums]
validgames = [all(vr) for vr in validrounds]

IDs = [i+1 for i in range(len(validgames)) if validgames[i] == True]
sum(IDs)
# 2795

# Part 2

cubemaxnums = []

def power(*args):
    return np.prod(args)

def max_cubes(game):
    cube_dict = {"red": 0, "green": 0, "blue": 0}
    for cuberound in game:
        for cubes in cuberound:
            colour = cubes.split(" ")[1]
            numcubes = int(cubes.split(" ")[0])
            cube_dict[colour] = max(cube_dict[colour], numcubes)
    cubemaxnums.append(cube_dict)
    
for game in cubenums:
    max_cubes(game)
    
powers = [power(list(d.values())) for d in cubemaxnums]
sum(powers)            
# 75561
